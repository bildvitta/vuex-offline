{"version":3,"file":"index.min.js","sources":["../src/utils/deleteBy.js","../src/utils/find.js","../src/utils/findByIds.js","../src/utils/findOne.js","../src/utils/formatResponse.js","../src/utils/formatError.js","../src/utils/getFieldsByType.js","../src/utils/setOptions.js","../src/utils/getFieldsWithRelationshipOptions.js","../src/utils/parseJSON.js","../src/utils/getFindQuery.js","../src/utils/mapJSON.js","../src/utils/nestField.js","../src/utils/setDefaults.js","../src/utils/statusResponse.js","../src/module/actions/update.js","../src/module/actions/index.js","../src/module/actions/create.js","../src/module/actions/destroy.js","../src/module/actions/fetchFilters.js","../src/module/actions/fetchList.js","../src/module/actions/fetchSingle.js","../src/module/actions/replace.js","../src/module/getters.js","../src/module/mutations.js","../src/module/state.js","../src/defaults/createDateTime.js","../src/defaults/createUUID.js","../src/index.js"],"sourcesContent":["export default function (object, callback = () => {}) {\r\n  for (const key in object) {\r\n    const validation = callback(object[key])\r\n\r\n    if (validation) {\r\n      delete object[key]\r\n    }\r\n  }\r\n\r\n  return object\r\n}\r\n","import { database } from '../index.js'\r\n\r\n/**\r\n * @param {string} name\r\n * @param {object} query={object}\r\n * @returns {promise}\r\n * @example find('users', { isActive: true })\r\n */\r\nexport default function (name, query = {}) {\r\n  return database.collections[name].find({ selector: query }).exec()\r\n}\r\n","import { database } from '../index.js'\r\n/**\r\n * @param {string} name\r\n * @param {string[]} ids\r\n * @returns {Promise<Map>}\r\n * @example findByIds('users', ['uuid-1', 'uuid-2'])\r\n */\r\nexport default function (name, ids) {\r\n  return database.collections[name].findByIds(ids)\r\n}\r\n","import { database } from '../index.js'\r\n\r\n/**\r\n * @param {string} name\r\n * @param {object | string} query={object | string}\r\n * @returns {promise}\r\n * @example findOne('users', 'my_uuid')\r\n */\r\nexport default function (name, query = {}) {\r\n  const queryParam = typeof query === 'object' ? { selector: query } : query\r\n\r\n  return database.collections[name].findOne(queryParam).exec()\r\n}\r\n","export default function (response) {\r\n  return {\r\n    data: {\r\n      status: { code: 200 },\r\n      ...response\r\n    }\r\n  }\r\n}\r\n","import { RxError } from 'rxdb/dist/es/rx-error.js'\r\nimport formatResponse from './formatResponse.js'\r\n\r\n// https://www.npmjs.com/package/is-my-json-valid#error-messages\r\nconst ptBR = {\r\n  'is required': 'Este campo é obrigatório.',\r\n  // 'is the wrong type': '',\r\n  // 'has additional items': '',\r\n  'must be FORMAT format': 'Este campo precisa ser FORMAT.',\r\n  'must be unique': 'Já existe um registro com este valor.',\r\n  'must be date-time format': 'Data invalida.',\r\n  // 'must be an enum value': '',\r\n  // 'dependencies not set': '',\r\n  // 'has additional properties': '',\r\n  // 'referenced schema does not match': '',\r\n  // 'negative schema matches': '',\r\n  // 'pattern mismatch': '',\r\n  // 'no schemas match': '',\r\n  // 'no (or more than one) schemas match': '',\r\n  // 'has a remainder': '',\r\n  'has more properties than allowed': 'Selecione menos propriedades.',\r\n  'has less properties than allowed': 'Selecione mais propriedades.',\r\n  'has more items than allowed': 'Selecione menos itens.',\r\n  'has less items than allowed': 'Selecione mais itens.',\r\n  'has longer length than allowed': 'O valor é muito grande.',\r\n  'has less length than allowed': 'O valor é muito pequeno.',\r\n  'is less than minimum': 'O valor é menor que o mínimo.',\r\n  'is more than maximum': 'O valor é maior que o máximo.'\r\n}\r\n\r\nconst localize = message => [ptBR[message] || message]\r\nconst labelize = label => label.replace('data.', '')\r\n\r\nexport default function (error, response = {}) {\r\n  if (!(error instanceof RxError)) {\r\n    throw error\r\n  }\r\n\r\n  const { errors: databaseErrors, obj: result } = error.parameters\r\n  const errors = {}\r\n\r\n  for (const { field, message } of databaseErrors) {\r\n    errors[labelize(field)] = localize(message)\r\n  }\r\n\r\n  return {\r\n    response: formatResponse({\r\n      status: { code: 400 }, errors, result, ...response\r\n    })\r\n  }\r\n}\r\n","export default function (fields = {}, type, callback) {\r\n  const filteredFields = {}\r\n\r\n  for (const key in fields) {\r\n    const field = fields[key]\r\n\r\n    if (field.type === type) {\r\n      filteredFields[key] = field\r\n      callback === 'function' && callback(field)\r\n    }\r\n  }\r\n\r\n  return filteredFields\r\n}\r\n","export default function (documents, { label, value }) {\r\n  return documents.map(document => ({\r\n    label: document[label],\r\n    value: document[value],\r\n    data: document.toJSON()\r\n  }))\r\n}\r\n","import setOptions from './setOptions.js'\r\n\r\nexport default async function ({ fields, idKey, parent, relationships, form, id }) {\r\n  fields = JSON.parse(JSON.stringify(fields))\r\n\r\n  const methodsModels = {\r\n    fetchList: !form && !id,\r\n    fetchSingleCreate: form && !id,\r\n    fetchSingleEdit: form && id,\r\n    fetchSingleShow: !form && id\r\n  }\r\n\r\n  // model with value true\r\n  const model = Object.keys(methodsModels).find(item => methodsModels[item])\r\n\r\n  for (const key in relationships) {\r\n    const relationship = relationships[key]\r\n    const { ref, methods } = relationship\r\n\r\n    // if there are methods, and it is not the current method returns empty options\r\n    if (methods && methods.length && !methods.includes(model)) {\r\n      fields[key].options = []\r\n      continue\r\n    }\r\n\r\n    if (ref) {\r\n      if (!relationship.label) { relationship.label = idKey }\r\n      if (!relationship.value) { relationship.value = idKey }\r\n\r\n      const documents = await parent.collections[ref].find().exec()\r\n      fields[key].options = setOptions(documents, relationship)\r\n\r\n      continue\r\n    }\r\n\r\n    for (const relKey in relationship) {\r\n      const relRef = relationship[relKey].ref\r\n      const documents = await parent.collections[relRef].find().exec()\r\n\r\n      fields[key].children[relKey] = {\r\n        options: setOptions(documents, relationship[relKey]),\r\n        ...fields[key].children[relKey]\r\n      }\r\n    }\r\n  }\r\n\r\n  return fields\r\n}","export default function (value) {\r\n  try { return JSON.parse(value) } catch { return value }\r\n}\r\n","import parseJSON from './parseJSON.js'\r\n\r\nexport default function (moduleFilters = {}, { filters, search }) {\r\n  const { queryOperators, search: searchFilter } = moduleFilters\r\n  const filtersQuery = {}\r\n\r\n  for (const name in filters) {\r\n    const filter = filters[name]\r\n    const queryOperator = queryOperators[name]\r\n\r\n    if (!queryOperator) {\r\n      throw new Error(`The queryOperator is missing for filter \"${name}\".`)\r\n    }\r\n\r\n    if (typeof queryOperator === 'function') {\r\n      const { value, operator, model } = queryOperator(filter) || {}\r\n\r\n      filtersQuery[model || name] = {\r\n        ...filtersQuery[model || name],\r\n        [operator || '$regex']: parseJSON(value) \r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n    filtersQuery[name] = { [queryOperator]: parseJSON(filter) }\r\n  }\r\n\r\n  if (search) {\r\n    filtersQuery.$or = (searchFilter || []).map(\r\n      item => ({ [item]: { $regex: new RegExp(search, 'gi') } })\r\n    )\r\n  }\r\n\r\n  return {\r\n    selector: { ...filtersQuery }\r\n  }\r\n}\r\n","export default function (array = []) {\r\n  return array.map(item => item.toJSON())\r\n}\r\n","export default function nestField (nested = [], destroyedKey = 'destroyed') {\r\n  if (!Array.isArray(nested)) {\r\n    throw new Error('Please provide a valid array.')\r\n  }\r\n\r\n  let index = 0\r\n\r\n  function hasNext () {\r\n    return index < nested.length\r\n  }\r\n\r\n  function next () {\r\n    return nested[index++]\r\n  }\r\n\r\n  while (hasNext()) {\r\n    const current = next()\r\n\r\n    if (current[destroyedKey]) {\r\n      index--\r\n      nested.splice(index, 1)\r\n      continue\r\n    }\r\n\r\n    for (const key in current) {\r\n      if (Array.isArray(current[key]) && current[key].length) {\r\n        nestField(nested[index - 1][key])\r\n      }\r\n    }\r\n  }\r\n\r\n  return nested\r\n}\r\n","export default function (defaults = {}) {\r\n  const response = {}\r\n\r\n  for (const key in defaults) {\r\n    const value = defaults[key]\r\n    response[key] = typeof value === 'function' ? value() : value\r\n  }\r\n\r\n  return response\r\n}\r\n","export default function (code, text) {\r\n  return {\r\n    data: {\r\n      status: { code, text }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  formatError,\r\n  formatResponse,\r\n  getFieldsByType,\r\n  nestField,\r\n  setDefaults,\r\n  statusResponse\r\n} from '../../utils/index.js'\r\n\r\nexport default function (module, collection, { postSaveByAction }) {\r\n  const { fields, updateDefaults, name } = module\r\n\r\n  return async function ({ commit }, { payload, id }) {\r\n    payload = { ...payload, ...setDefaults(updateDefaults) }\r\n\r\n    try {\r\n      const document = await collection.findOne(id).exec()\r\n\r\n      if (!document) {\r\n        throw statusResponse(404, 'Not found')\r\n      }\r\n\r\n      getFieldsByType(fields, 'nested', ({ name }) => {\r\n        payload[name] = nestField(payload[name])\r\n      })\r\n\r\n      await document.update({ $set: payload })\r\n      const result = { ...document.toJSON(), ...payload }\r\n\r\n      commit('replaceItem', result)\r\n\r\n      postSaveByAction({\r\n        name,\r\n        fields,\r\n        payload: result,\r\n      })\r\n      return formatResponse({ result })\r\n    } catch (error) {\r\n      throw formatError(error)\r\n    }\r\n  }\r\n}\r\n","import create from './create.js'\r\nimport destroy from './destroy.js'\r\nimport fetchFilters from './fetchFilters.js'\r\nimport fetchList from './fetchList.js'\r\nimport fetchSingle from './fetchSingle.js'\r\nimport replace from './replace.js'\r\nimport update from './update.js'\r\n\r\nexport default {\r\n  create,\r\n  destroy,\r\n  fetchFilters,\r\n  fetchList,\r\n  fetchSingle,\r\n  replace,\r\n  update\r\n}\r\n","import {\r\n  deleteBy,\r\n  formatError,\r\n  formatResponse,\r\n  getFieldsByType,\r\n  nestField,\r\n  setDefaults\r\n} from '../../utils/index.js'\r\n\r\nimport { cloneDeep } from 'lodash'\r\n\r\nexport default function (module, collection, { postSaveByAction }) {\r\n  const { defaults, fields, name } = module\r\n\r\n  return async function ({ commit }, { payload }) {\r\n    payload = {\r\n      ...setDefaults(defaults),\r\n      ...deleteBy(cloneDeep(payload), item => item === undefined)\r\n    }\r\n\r\n    try {\r\n      getFieldsByType(fields, 'nested', ({ name }) => {\r\n        payload[name] = nestField(payload[name])\r\n      })\r\n\r\n      const document = await collection.insert(payload)\r\n      const documentJSON = document.toJSON()\r\n\r\n      commit('setListItem', documentJSON)\r\n\r\n      postSaveByAction({\r\n        name,\r\n        fields,\r\n        payload: documentJSON,\r\n      })\r\n      return formatResponse({ result: documentJSON })\r\n    } catch (error) {\r\n      throw formatError(error)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  formatResponse,\r\n  statusResponse\r\n} from '../../utils/index.js'\r\n\r\nexport default function (module, collection) {\r\n  return async function ({ commit }, { id }) {\r\n    try {\r\n      const document = await collection.findOne(id).exec()\r\n\r\n      if (!document) {\r\n        throw statusResponse(404, 'Not found')\r\n      }\r\n\r\n      const documentJSON = document.toJSON()\r\n      await document.remove()\r\n\r\n      commit('removeListItem', id)\r\n      return formatResponse({ result: documentJSON })\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n}\r\n","import {\r\n  formatResponse,\r\n  getFieldsWithRelationshipOptions\r\n} from '../../utils/index.js'\r\n\r\nexport default function ({ filters, idKey, parent }) {\r\n  return async function ({ commit }) {\r\n    try {\r\n      const { fields, relationships } = filters\r\n      const formattedFields = await getFieldsWithRelationshipOptions({ fields, idKey, parent, relationships })\r\n\r\n      commit('setFilters', formattedFields)\r\n      return formatResponse({ formattedFields })\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n}\r\n","import {\r\n  formatResponse,\r\n  getFindQuery,\r\n  getFieldsWithRelationshipOptions,\r\n  mapJSON\r\n} from '../../utils/index.js'\r\n\r\nexport default function (module, collection) {\r\n  return async function (\r\n    { commit },\r\n    { filters, findQuery, increment, limit, page = 1, search } = {}\r\n  ) {\r\n    try {\r\n      const { preQueryList } = module.interceptors || {}\r\n      const findParam = preQueryList ? preQueryList({ search, filters }) : findQuery || {}\r\n\r\n      if (!findQuery) {\r\n        findQuery = getFindQuery(module.filters, {\r\n          filters: findParam.filters || filters,\r\n          search: findParam.search || search\r\n        })\r\n      }\r\n\r\n      const query = collection.find(findQuery).sort(module.sort)\r\n      const documents = await query.exec()\r\n\r\n      const count = documents.length\r\n      const skip = (page - 1) * (limit || module.perPage)\r\n\r\n      const slicedDocuments = documents.slice(skip, skip + module.perPage)\r\n      const documentsJSON = mapJSON(slicedDocuments)\r\n\r\n      commit('setList', { count, increment, results: documentsJSON })\r\n\r\n      return formatResponse({\r\n        fields: await getFieldsWithRelationshipOptions(module),\r\n        results: documentsJSON\r\n      })\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n}\r\n","import {\r\n  formatResponse,\r\n  getFieldsWithRelationshipOptions,\r\n  statusResponse\r\n} from '../../utils/index.js'\r\n\r\nexport default function (module, collection) {\r\n  return async function ({ commit }, { form, id }) {\r\n    const fields = await getFieldsWithRelationshipOptions({ ...module, form, id })\r\n\r\n    if (form && !id) {\r\n      return formatResponse({ fields })\r\n    }\r\n\r\n    try {\r\n      const document = await collection.findOne(id).exec()\r\n\r\n      if (!document) {\r\n        throw statusResponse(404, 'Not found')\r\n      }\r\n\r\n      const documentJSON = document.toJSON()\r\n      commit('replaceItem', documentJSON)\r\n\r\n      return formatResponse({ fields, result: documentJSON })\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n}\r\n","import update from './update.js'\r\n\r\nexport default function (module, collection, interceptors) {\r\n  return update(module, collection, interceptors)\r\n}\r\n","export default function ({ getters, idKey }) {\r\n  return {\r\n    list: state => state.list,\r\n    filters: state => state.filters,\r\n    totalPages: state => state.totalPages,\r\n\r\n    byId: state => id => state.list.find(item => item[idKey] === id),\r\n\r\n    ...getters\r\n  }\r\n}\r\n","export default function ({ idKey, mutations, perPage }) {\r\n  return {\r\n    setFilters (state, payload) {\r\n      state.filters = payload\r\n    },\r\n\r\n    setList (state, { count, increment, results = [] }) {\r\n      if (increment) {\r\n        state.list.push(...results)\r\n      } else {\r\n        state.list = results\r\n      }\r\n\r\n      state.totalPages = Math.ceil(count / perPage)\r\n    },\r\n\r\n    setListItem (state, payload = {}) {\r\n      state.list.push(payload)\r\n    },\r\n\r\n    setErrors (state, { model, hasError }) {\r\n      state[model] = !!hasError\r\n    },\r\n\r\n    replaceItem (state, payload) {\r\n      const index = state.list.findIndex(item => item[idKey] === payload[idKey])\r\n      ~index ? state.list.splice(index, 1, payload) : state.list.push(payload)\r\n    },\r\n\r\n    removeListItem (state, id) {\r\n      const index = state.list.findIndex(item => item[idKey] === id)\r\n      ~index && state.list.splice(index, 1)\r\n    },\r\n\r\n    ...mutations\r\n  }\r\n}\r\n","export default function ({ state }) {\r\n  return {\r\n    list: [],\r\n    filters: {},\r\n    totalPages: 0,\r\n\r\n    ...state\r\n  }\r\n}\r\n","export default function () {\r\n  return (new Date()).toISOString()\r\n}\r\n","export default function () {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, char =>\r\n    (char ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> char / 4)\r\n      .toString(16)\r\n  )\r\n}\r\n","import { addRxPlugin, createRxDatabase } from 'rxdb/plugins/core'\r\nimport { RxDBValidatePlugin } from 'rxdb/plugins/validate'\r\nimport { RxDBQueryBuilderPlugin } from 'rxdb/plugins/query-builder'\r\nimport { RxDBMigrationPlugin } from 'rxdb/plugins/migration'\r\nimport { RxDBReplicationCouchDBPlugin } from 'rxdb/plugins/replication-couchdb'\r\nimport { RxDBLeaderElectionPlugin } from 'rxdb/plugins/leader-election'\r\nimport { RxDBUpdatePlugin } from 'rxdb/plugins/update'\r\nimport { getRxStoragePouch, addPouchPlugin, PouchDB } from 'rxdb/plugins/pouchdb'\r\n\r\nimport { actions, getters, mutations, state } from './module/index.js'\r\n\r\nimport { find, findOne, nestField, findByIds } from './utils/index.js'\r\nimport { createDateTime, createUUID } from './defaults/index.js'\r\n\r\nlet database = null\r\n\r\nexport default class {\r\n  constructor (options = {}) {\r\n    if (!options.database.name) {\r\n      throw new Error('Name is required.')\r\n    }\r\n\r\n    const validStorages = ['idb', 'memory']\r\n    this.storage = options.storage || 'idb'\r\n\r\n    if (!validStorages.includes(this.storage)) {\r\n      throw new Error(`Invalid storage: ${this.storage}. Valid values are: ${validStorages.join(', ')}.`)\r\n    }\r\n\r\n    this.database = null\r\n    this.databaseOptions = options.database\r\n\r\n    this.idKey = options.idKey || 'id'\r\n    this.sync = options.sync\r\n    this.perPage = options.perPage || 12\r\n\r\n    this.collections = {}\r\n    this.modules = options.modules || []\r\n    this.storeModules = {}\r\n\r\n    // Middleware-hooks\r\n    // https://rxdb.info/middleware.html\r\n    this.hooks = options.hooks || [\r\n      'preInsert',\r\n      'postInsert',\r\n      'preSave',\r\n      'postSave',\r\n      'preRemove',\r\n      'postRemove',\r\n      'postCreate'\r\n    ]\r\n\r\n    this.interceptors = options.interceptors || {\r\n      postSaveByAction: (() => {})\r\n    }\r\n\r\n    // Types\r\n    this.types = options.types || [\r\n      'CREATE',\r\n      'DESTROY',\r\n      'FETCH_FILTERS',\r\n      'FETCH_LIST',\r\n      'FETCH_SINGLE',\r\n      'REPLACE',\r\n      'UPDATE'\r\n    ]\r\n  }\r\n\r\n  addDatabasePlugin (...plugins) {\r\n    for (const plugin of plugins) {\r\n      addRxPlugin(plugin)\r\n    }\r\n  }\r\n\r\n  addDatabasePouchPlugin (...plugins) {\r\n    for (const plugin of plugins) {\r\n      addPouchPlugin(plugin)\r\n    }\r\n  }\r\n\r\n  async createDatabase () {\r\n    // Custom Build\r\n    // https://rxdb.info/custom-build.html\r\n    this.addDatabasePlugin(\r\n      RxDBValidatePlugin,\r\n      RxDBQueryBuilderPlugin,\r\n      RxDBMigrationPlugin,\r\n      RxDBReplicationCouchDBPlugin,\r\n      RxDBLeaderElectionPlugin,\r\n      RxDBUpdatePlugin\r\n    )\r\n\r\n    this.addDatabasePouchPlugin(\r\n      require('pouchdb-adapter-http'),\r\n      this._getStorageAdapterPlugin()\r\n    )\r\n\r\n    if (process.env.DEBUGGING) {\r\n      this.addDatabasePlugin(\r\n        require('rxdb/plugins/dev-mode').RxDBDevModePlugin\r\n      )\r\n    }\r\n\r\n    this.database = await createRxDatabase({\r\n      storage: getRxStoragePouch(this.storage),\r\n      ...this.databaseOptions\r\n    })\r\n\r\n    database = this.database\r\n  }\r\n\r\n  destroyDatabase () {\r\n    return this.database.destroy()\r\n  }\r\n\r\n  removeDatabase () {\r\n    return this.database.remove()\r\n  }\r\n\r\n  async setupCollections () {\r\n    const collections = {}\r\n\r\n    for (const module of this.modules) {\r\n      collections[module.name] = module\r\n    }\r\n\r\n    this.collections = await this.database.addCollections(collections)\r\n\r\n    for (const module of this.modules) {\r\n      this.storeModules[module.name] = this.createStoreModule(module)\r\n    }\r\n  }\r\n\r\n  createStoreModule (module = {}) {\r\n    module.parent = this\r\n    const collection = this.getCollectionByName(module.name)\r\n\r\n    module.idKey = module.idKey || this.idKey\r\n    module.perPage = module.perPage || this.perPage\r\n\r\n    // Hooks\r\n    const hooks = module.hooks || {}\r\n\r\n    for (const name of this.hooks) {\r\n      const hook = hooks[name]\r\n\r\n      if (Array.isArray(hook)) {\r\n        collection[name](...hook)\r\n      } else if (typeof hook === 'function') {\r\n        collection[name](hook, false)\r\n      }\r\n    }\r\n\r\n    // Types\r\n    const types = module.types || this.types\r\n    const has = type => types.includes(type)\r\n\r\n    // Params\r\n    const params = [module, collection, this.interceptors]\r\n\r\n    return {\r\n      namespaced: true,\r\n\r\n      actions: {\r\n        create: has('CREATE') && actions.create(...params),\r\n        destroy: has('DESTROY') && actions.destroy(...params),\r\n        fetchFilters: has('FETCH_FILTERS') && actions.fetchFilters(...params),\r\n        fetchList: has('FETCH_LIST') && actions.fetchList(...params),\r\n        fetchSingle: has('FETCH_SINGLE') && actions.fetchSingle(...params),\r\n        replace: has('REPLACE') && actions.replace(...params),\r\n        update: has('UPDATE') && actions.update(...params),\r\n        ...module.actions\r\n      },\r\n\r\n      getters: getters(...params),\r\n      mutations: mutations(...params),\r\n      state: state(...params)\r\n    }\r\n  }\r\n\r\n  getCollections () {\r\n    return this.collections\r\n  }\r\n\r\n  getCollectionByName (name) {\r\n    return this.collections[name]\r\n  }\r\n\r\n  getStoreModules () {\r\n    return this.storeModules\r\n  }\r\n\r\n  async makeSync (collections) {\r\n    const defaultOptions = {\r\n      waitForLeadership: true,\r\n      direction: {\r\n        pull: true,\r\n        push: true\r\n      },\r\n      options: {\r\n        retry: true,\r\n        live: true\r\n      }\r\n    }\r\n\r\n    const collectionsToSync = collections || Object.keys(this.collections)\r\n    let collectionsActiveSync = {}\r\n    let docs = {}\r\n    let percentage = 0\r\n    let syncedData = 0\r\n\r\n    const handleOnSync = (syncState, collectionName, moduleByName) => {\r\n      const runOnSync = (percentage, syncedData, collectionsActiveSync) => {\r\n        this.sync.onSync && this.sync.onSync(percentage, syncedData, collectionsActiveSync)\r\n        moduleByName.sync && moduleByName.sync.onSync && moduleByName.sync.onSync(percentage, syncedData, collectionsActiveSync)\r\n      }\r\n\r\n      syncState.change$.subscribe(change => {\r\n        docs[collectionName] = change.change ? change.change.docs_read : change.docs_read\r\n        syncedData = Object.values(docs).reduce((accumulator, currentValue) => accumulator + currentValue, 0)\r\n        \r\n        runOnSync(percentage, syncedData)\r\n      })\r\n\r\n      syncState.active$.subscribe(active => {\r\n        if (!Object.keys(collectionsActiveSync).length && !active) return\r\n\r\n        Object.assign(collectionsActiveSync, { [collectionName]: active })\r\n\r\n        const collectionsList = Object.values(collectionsActiveSync)\r\n        const quantityOfFinishedSync = collectionsList.filter(value => !value).length\r\n        percentage = quantityOfFinishedSync ? Math.round((100 * quantityOfFinishedSync) / collectionsList.length) : 0\r\n\r\n        runOnSync(percentage, syncedData, collectionsActiveSync)\r\n      })\r\n    }\r\n\r\n    for (const collectionIndex in collectionsToSync) {\r\n      const collectionName = collectionsToSync[collectionIndex]\r\n\r\n      const moduleByName = this.modules.find(module => module.name === collectionName)\r\n      const moduleOptions = (moduleByName.sync && moduleByName.sync.options) || {}\r\n      const syncOptions = { ...defaultOptions, ...this.sync.options, ...moduleOptions }\r\n      const query = (moduleByName.sync && moduleByName.sync.query) || this.sync.query || (() => {})\r\n\r\n      if (!syncOptions.baseURL) {\r\n        throw new Error('baseURL is required to sync.')\r\n      }\r\n\r\n      const syncState = await this.collections[collectionName].syncCouchDB({\r\n        ...syncOptions,\r\n        remote: `${syncOptions.baseURL}/${collectionName}`,\r\n        query: query(this.collections[collectionName])\r\n      })\r\n\r\n      if (moduleByName.sync && moduleByName.sync.handler) {\r\n        moduleByName.sync.handler(syncState)\r\n      }\r\n\r\n      if (this.sync.onSync || (moduleByName.sync && moduleByName.sync.onSync)) {\r\n        handleOnSync(syncState, collectionName, moduleByName)\r\n      }\r\n    }\r\n  }\r\n\r\n  _getStorageAdapterPlugin () {\r\n    const storages = {\r\n      idb: () => require('pouchdb-adapter-idb'),\r\n      memory: () => require('pouchdb-adapter-memory'),\r\n    }\r\n\r\n    return storages[this.storage]()\r\n  }\r\n}\r\n\r\nexport {\r\n  PouchDB,\r\n  createDateTime,\r\n  createUUID,\r\n  database,\r\n  find,\r\n  findByIds,\r\n  findOne,\r\n  nestField\r\n}\r\n"],"names":["object","callback","key","validation","name","query","database","collections","find","selector","exec","ids","findByIds","queryParam","_typeof","findOne","response","data","status","code","ptBR","localize","message","labelize","label","replace","error","RxError","parameters","databaseErrors","errors","result","obj","field","formatResponse","fields","type","filteredFields","documents","value","map","document","toJSON","idKey","parent","relationships","form","id","JSON","parse","stringify","methodsModels","fetchList","fetchSingleCreate","fetchSingleEdit","fetchSingleShow","model","Object","keys","item","relationship","ref","methods","length","includes","options","setOptions","relKey","relRef","children","moduleFilters","filters","search","queryOperators","searchFilter","filtersQuery","filter","queryOperator","Error","parseJSON","operator","$or","$regex","RegExp","array","nestField","nested","destroyedKey","Array","isArray","index","hasNext","next","current","splice","defaults","text","module","collection","postSaveByAction","updateDefaults","commit","payload","setDefaults","statusResponse","getFieldsByType","update","$set","formatError","create","deleteBy","cloneDeep","undefined","insert","documentJSON","destroy","remove","fetchFilters","getFieldsWithRelationshipOptions","formattedFields","findQuery","increment","limit","page","interceptors","preQueryList","findParam","getFindQuery","sort","count","skip","perPage","slicedDocuments","slice","documentsJSON","mapJSON","results","fetchSingle","getters","list","state","totalPages","byId","mutations","setFilters","setList","push","Math","ceil","setListItem","setErrors","hasError","replaceItem","findIndex","removeListItem","Date","toISOString","char","crypto","getRandomValues","Uint8Array","toString","validStorages","storage","this","join","databaseOptions","sync","modules","storeModules","hooks","types","plugins","plugin","addRxPlugin","addPouchPlugin","addDatabasePlugin","RxDBValidatePlugin","RxDBQueryBuilderPlugin","RxDBMigrationPlugin","RxDBReplicationCouchDBPlugin","RxDBLeaderElectionPlugin","RxDBUpdatePlugin","addDatabasePouchPlugin","require","_getStorageAdapterPlugin","process","env","DEBUGGING","RxDBDevModePlugin","createRxDatabase","getRxStoragePouch","addCollections","createStoreModule","getCollectionByName","hook","has","params","namespaced","actions","defaultOptions","waitForLeadership","direction","pull","retry","live","collectionsToSync","collectionsActiveSync","docs","percentage","syncedData","handleOnSync","syncState","collectionName","moduleByName","runOnSync","_this","onSync","change$","subscribe","change","docs_read","values","reduce","accumulator","currentValue","active$","active","assign","collectionsList","quantityOfFinishedSync","round","collectionIndex","moduleOptions","syncOptions","baseURL","syncCouchDB","remote","handler","idb","memory"],"mappings":"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"}