{"version":3,"file":"index.min.js","sources":["../src/utils/formatResponse.js","../src/utils/formatError.js","../src/utils/getFieldsByType.js","../src/utils/setOptions.js","../src/utils/getFieldsWithRelationshipOptions.js","../src/utils/parseJSON.js","../src/utils/getFindQuery.js","../src/utils/mapJSON.js","../src/utils/nestField.js","../src/utils/setDefaults.js","../src/utils/statusResponse.js","../src/module/actions/update.js","../src/module/actions/index.js","../src/module/actions/create.js","../src/module/actions/destroy.js","../src/module/actions/fetchFilters.js","../src/module/actions/fetchList.js","../src/module/actions/fetchSingle.js","../src/module/actions/replace.js","../src/module/getters.js","../src/module/mutations.js","../src/module/state.js","../src/defaults/createDateTime.js","../src/defaults/createUUID.js","../src/index.js"],"sourcesContent":["export default function (response) {\n  return {\n    data: {\n      status: { code: 200 },\n      ...response\n    }\n  }\n}\n","import { RxError } from 'rxdb/dist/es/rx-error.js'\nimport formatResponse from './formatResponse.js'\n\n// https://www.npmjs.com/package/is-my-json-valid#error-messages\nconst ptBR = {\n  'is required': 'Este campo é obrigatório.',\n  // 'is the wrong type': '',\n  // 'has additional items': '',\n  'must be FORMAT format': 'Este campo precisa ser FORMAT.',\n  'must be unique': 'Já existe um registro com este valor.',\n  // 'must be an enum value': '',\n  // 'dependencies not set': '',\n  // 'has additional properties': '',\n  // 'referenced schema does not match': '',\n  // 'negative schema matches': '',\n  // 'pattern mismatch': '',\n  // 'no schemas match': '',\n  // 'no (or more than one) schemas match': '',\n  // 'has a remainder': '',\n  'has more properties than allowed': 'Selecione menos propriedades.',\n  'has less properties than allowed': 'Selecione mais propriedades.',\n  'has more items than allowed': 'Selecione menos itens.',\n  'has less items than allowed': 'Selecione mais itens.',\n  'has longer length than allowed': 'O valor é muito grande.',\n  'has less length than allowed': 'O valor é muito pequeno.',\n  'is less than minimum': 'O valor é menor que o mínimo.',\n  'is more than maximum': 'O valor é maior que o máximo.'\n}\n\nconst localize = message => [ptBR[message] || message]\nconst labelize = label => label.replace('data.', '')\n\nexport default function (error, response = {}) {\n  if (!(error instanceof RxError)) {\n    throw error\n  }\n\n  const { errors: databaseErrors, obj: result } = error.parameters\n  const errors = {}\n\n  for (const { field, message } of databaseErrors) {\n    errors[labelize(field)] = localize(message)\n  }\n\n  return {\n    response: formatResponse({\n      status: { code: 400 }, errors, result, ...response\n    })\n  }\n}\n","export default function (fields = {}, type, callback) {\n  const filteredFields = {}\n\n  for (const key in fields) {\n    const field = fields[key]\n\n    if (field.type === type) {\n      filteredFields[key] = field\n      callback === 'function' && callback(field)\n    }\n  }\n\n  return filteredFields\n}\n","export default function (documents, { label, value }) {\n  return documents.map(document => ({\n    label: document[label],\n    value: document[value],\n    data: document.toJSON()\n  }))\n}\n","import setOptions from './setOptions.js'\n\nexport default async function ({ fields, idKey, parent, relationships }) {\n  fields = JSON.parse(JSON.stringify(fields))\n\n  for (const key in relationships) {\n    const relationship = relationships[key]\n    const { ref } = relationship\n\n    if (ref) {\n      if (!relationship.label) { relationship.label = idKey }\n      if (!relationship.value) { relationship.value = idKey }\n\n      const documents = await parent.collections[ref].find().exec()\n      fields[key].options = setOptions(documents, relationship)\n\n      continue\n    }\n\n    for (const relKey in relationship) {\n      const relRef = relationship[relKey].ref\n      const documents = await parent.collections[relRef].find().exec()\n\n      fields[key].children[relKey] = {\n        options: setOptions(documents, relationship[relKey]),\n        ...fields[key].children[relKey]\n      }\n    }\n  }\n\n  return fields\n}\n","export default function (value) {\n  try { return JSON.parse(value) } catch { return value }\n}\n","import parseJSON from './parseJSON.js'\n\nexport default function (moduleFilters = {}, { filters, search }) {\n  const { queryOperators, search: searchFilter } = moduleFilters\n  const filtersQuery = {}\n\n  for (const name in filters) {\n    const filter = filters[name]\n    const queryOperator = queryOperators[name]\n\n    if (!queryOperator) {\n      throw new Error(`The queryOperator is missing for filter \"${name}\".`)\n    }\n\n    if (typeof queryOperator === 'function') {\n      const { value, operator } = queryOperator(filter) || {}\n      filtersQuery[name] = { [operator || '$regex']: parseJSON(value) }\n\n      continue\n    }\n\n    filtersQuery[name] = { [queryOperator]: parseJSON(filter) }\n  }\n\n  if (search) {\n    filtersQuery.$or = (searchFilter || []).map(\n      item => ({ [item]: { $regex: new RegExp(`^${search}$`, 'i') } })\n    )\n  }\n\n  return {\n    selector: { ...filtersQuery }\n  }\n}\n","export default function (array = []) {\n  return array.map(item => item.toJSON())\n}\n","export default function nestField (nested = [], destroyedKey = 'destroyed') {\n  if (!Array.isArray(nested)) {\n    throw new Error('Please provide a valid array.')\n  }\n\n  let index = 0\n\n  function hasNext () {\n    return index < nested.length\n  }\n\n  function next () {\n    return nested[index++]\n  }\n\n  while (hasNext()) {\n    const current = next()\n\n    if (current[destroyedKey]) {\n      index--\n      nested.splice(index, 1)\n      continue\n    }\n\n    for (const key in current) {\n      if (Array.isArray(current[key]) && current[key].length) {\n        nestField(nested[index - 1][key])\n      }\n    }\n  }\n\n  return nested\n}\n","export default function (defaults = {}) {\n  const response = {}\n\n  for (const key in defaults) {\n    const value = defaults[key]\n    response[key] = typeof value === 'function' ? value() : value\n  }\n\n  return response\n}\n","export default function (code, text) {\n  return {\n    data: {\n      status: { code, text }\n    }\n  }\n}\n","import {\n  formatError,\n  formatResponse,\n  getFieldsByType,\n  nestField,\n  setDefaults,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function ({ fields, updateDefaults }, collection) {\n  return async function ({ commit }, { payload, id }) {\n    payload = { ...payload, ...setDefaults(updateDefaults) }\n\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      getFieldsByType(fields, 'nested', ({ name }) => {\n        payload[name] = nestField(payload[name])\n      })\n\n      await document.update({ $set: payload })\n      const result = { ...document.toJSON(), ...payload }\n\n      commit('replaceItem', result)\n      return formatResponse({ result })\n    } catch (error) {\n      throw formatError(error)\n    }\n  }\n}\n","import create from './create.js'\nimport destroy from './destroy.js'\nimport fetchFilters from './fetchFilters.js'\nimport fetchList from './fetchList.js'\nimport fetchSingle from './fetchSingle.js'\nimport replace from './replace.js'\nimport update from './update.js'\n\nexport default {\n  create,\n  destroy,\n  fetchFilters,\n  fetchList,\n  fetchSingle,\n  replace,\n  update\n}\n","import {\n  formatError,\n  formatResponse,\n  getFieldsByType,\n  nestField,\n  setDefaults\n} from '../../utils/index.js'\n\nexport default function ({ defaults, fields }, collection) {\n  return async function ({ commit }, { payload }) {\n    payload = { ...setDefaults(defaults), ...payload }\n\n    try {\n      getFieldsByType(fields, 'nested', ({ name }) => {\n        payload[name] = nestField(payload[name])\n      })\n\n      const document = await collection.insert(payload)\n      const documentJSON = document.toJSON()\n\n      commit('setListItem', documentJSON)\n      return formatResponse({ result: documentJSON })\n    } catch (error) {\n      throw formatError(error)\n    }\n  }\n}\n","import {\n  formatResponse,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function ({ commit }, { id }) {\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      const documentJSON = document.toJSON()\n      await document.remove()\n\n      commit('removeListItem', id)\n      return formatResponse({ result: documentJSON })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse\n} from '../../utils/index.js'\n\nexport default function ({ filters }) {\n  return async function ({ commit }) {\n    try {\n      const { fields } = filters\n\n      commit('setFilters', fields)\n      return formatResponse({ fields })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse,\n  getFindQuery,\n  getFieldsWithRelationshipOptions,\n  mapJSON\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function (\n    { commit },\n    { filters, findQuery, increment, limit, page = 1, search } = {}\n  ) {\n    if (!findQuery) {\n      findQuery = getFindQuery(module.filters, { filters, search })\n    }\n\n    try {\n      const query = collection.find(findQuery).sort(module.sort)\n      const documents = await query.exec()\n\n      const count = documents.length\n      const skip = (page - 1) * (limit || module.perPage)\n\n      const slicedDocuments = documents.slice(skip, skip + module.perPage)\n      const documentsJSON = mapJSON(slicedDocuments)\n\n      commit('setList', { count, increment, results: documentsJSON })\n\n      return formatResponse({\n        fields: await getFieldsWithRelationshipOptions(module),\n        results: documentsJSON\n      })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse,\n  getFieldsWithRelationshipOptions,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function ({ commit }, { form, id }) {\n    const fields = await getFieldsWithRelationshipOptions(module)\n\n    if (form && !id) {\n      return formatResponse({ fields })\n    }\n\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      const documentJSON = document.toJSON()\n      commit('replaceItem', documentJSON)\n\n      return formatResponse({ fields, result: documentJSON })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import update from './update.js'\n\nexport default function (module, collection) {\n  return update(module, collection)\n}\n","export default function ({ getters, idKey }) {\n  return {\n    list: state => state.list,\n    filters: state => state.filters,\n    totalPages: state => state.totalPages,\n\n    byId: state => id => state.list.find(item => item[idKey] === id),\n\n    ...getters\n  }\n}\n","export default function ({ idKey, mutations, perPage }) {\n  return {\n    setFilters (state, payload) {\n      state.filters = payload\n    },\n\n    setList (state, { count, increment, results = [] }) {\n      if (increment) {\n        state.list.push(...results)\n      } else {\n        state.list = results\n      }\n\n      state.totalPages = Math.ceil(count / perPage)\n    },\n\n    setListItem (state, payload = {}) {\n      state.list.push(payload)\n    },\n\n    setErrors (state, { model, hasError }) {\n      state[model] = !!hasError\n    },\n\n    replaceItem (state, payload) {\n      const index = state.list.findIndex(item => item[idKey] === payload[idKey])\n      ~index ? state.list.splice(index, 1, payload) : state.list.push(payload)\n    },\n\n    removeListItem (state, id) {\n      const index = state.list.findIndex(item => item[idKey] === id)\n      ~index && state.list.splice(index, 1)\n    },\n\n    ...mutations\n  }\n}\n","export default function ({ state }) {\n  return {\n    list: [],\n    filters: {},\n    totalPages: 0,\n\n    ...state\n  }\n}\n","export default function () {\n  return (new Date()).toISOString()\n}\n","export default function () {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, char =>\n    (char ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> char / 4)\n      .toString(16)\n  )\n}\n","import { addRxPlugin, createRxDatabase } from 'rxdb/plugins/core'\nimport { RxDBValidatePlugin } from 'rxdb/plugins/validate'\nimport { RxDBQueryBuilderPlugin } from 'rxdb/plugins/query-builder'\nimport { RxDBMigrationPlugin } from 'rxdb/plugins/migration'\nimport { RxDBReplicationPlugin } from 'rxdb/plugins/replication'\nimport { RxDBLeaderElectionPlugin } from 'rxdb/plugins/leader-election'\nimport { RxDBUpdatePlugin } from 'rxdb/plugins/update'\n\nimport { actions, getters, mutations, state } from './module/index.js'\n\nimport { nestField } from './utils/index.js'\nimport { createDateTime, createUUID } from './defaults/index.js'\n\nexport {\n  createDateTime,\n  createUUID,\n  nestField\n}\n\nexport default class {\n  constructor (options = {}) {\n    if (!options.database.name) {\n      throw new Error('Name is required.')\n    }\n\n    this.database = null\n    this.databaseOptions = options.database\n\n    this.idKey = options.idKey || 'id'\n    this.perPage = options.perPage || 12\n\n    this.collections = {}\n    this.modules = options.modules || []\n    this.storeModules = {}\n\n    // Middleware-hooks\n    // https://rxdb.info/middleware.html\n    this.hooks = options.hooks || [\n      'preInsert',\n      'postInsert',\n      'preSave',\n      'postSave',\n      'preRemove',\n      'postRemove',\n      'postCreate'\n    ]\n\n    // Types\n    this.types = options.types || [\n      'CREATE',\n      'DESTROY',\n      'FETCH_FILTERS',\n      'FETCH_LIST',\n      'FETCH_SINGLE',\n      'REPLACE',\n      'UPDATE'\n    ]\n  }\n\n  addDatabasePlugin (...plugins) {\n    for (const plugin of plugins) {\n      addRxPlugin(plugin)\n    }\n  }\n\n  async createDatabase () {\n    // Custom Build\n    // https://rxdb.info/custom-build.html\n    this.addDatabasePlugin(\n      RxDBValidatePlugin,\n      RxDBQueryBuilderPlugin,\n      RxDBMigrationPlugin,\n      RxDBReplicationPlugin,\n      RxDBLeaderElectionPlugin,\n      RxDBUpdatePlugin,\n\n      require('pouchdb-adapter-idb')\n    )\n\n    if (process.env.DEBUGGING) {\n      this.addDatabasePlugin(\n        require('rxdb/plugins/dev-mode').RxDBDevModePlugin\n      )\n    }\n\n    this.database = await createRxDatabase({\n      adapter: 'idb',\n      ...this.databaseOptions\n    })\n  }\n\n  destroyDatabase () {\n    return this.database.destroy()\n  }\n\n  async setupCollections () {\n    const collections = {}\n\n    for (const module of this.modules) {\n      collections[module.name] = module\n    }\n\n    this.collections = await this.database.addCollections(collections)\n\n    for (const module of this.modules) {\n      this.storeModules[module.name] = this.createStoreModule(module)\n    }\n  }\n\n  createStoreModule (module = {}) {\n    module.parent = this\n    const collection = this.getCollectionByName(module.name)\n\n    module.idKey = module.idKey || this.idKey\n    module.perPage = module.perPage || this.perPage\n\n    // Hooks\n    const hooks = module.hooks || {}\n\n    for (const name of this.hooks) {\n      const hook = hooks[name]\n\n      if (Array.isArray(hook)) {\n        collection[name](...hook)\n      } else if (typeof hook === 'function') {\n        collection[name](hook, false)\n      }\n    }\n\n    // Types\n    const types = module.types || this.types\n    const has = type => types.includes(type)\n\n    // Params\n    const params = [module, collection]\n\n    return {\n      namespaced: true,\n\n      actions: {\n        create: has('CREATE') && actions.create(...params),\n        destroy: has('DESTROY') && actions.destroy(...params),\n        fetchFilters: has('FETCH_FILTERS') && actions.fetchFilters(...params),\n        fetchList: has('FETCH_LIST') && actions.fetchList(...params),\n        fetchSingle: has('FETCH_SINGLE') && actions.fetchSingle(...params),\n        replace: has('REPLACE') && actions.replace(...params),\n        update: has('UPDATE') && actions.update(...params)\n      },\n\n      getters: getters(...params),\n      mutations: mutations(...params),\n      state: state(...params)\n    }\n  }\n\n  getCollections () {\n    return this.collections\n  }\n\n  getCollectionByName (name) {\n    return this.collections[name]\n  }\n\n  getStoreModules () {\n    return this.storeModules\n  }\n}\n"],"names":["response","data","status","code","ptBR","localize","message","labelize","label","replace","error","RxError","parameters","databaseErrors","errors","result","obj","field","formatResponse","fields","type","callback","filteredFields","key","documents","value","map","document","toJSON","idKey","parent","relationships","JSON","parse","stringify","relationship","ref","collections","find","exec","options","setOptions","relKey","relRef","children","moduleFilters","filters","search","queryOperators","searchFilter","filtersQuery","name","filter","queryOperator","Error","parseJSON","operator","$or","item","$regex","RegExp","selector","array","nestField","nested","destroyedKey","Array","isArray","index","hasNext","length","next","current","splice","defaults","text","collection","updateDefaults","commit","payload","id","setDefaults","findOne","statusResponse","getFieldsByType","update","$set","formatError","create","insert","documentJSON","destroy","module","remove","fetchFilters","fetchList","findQuery","increment","limit","page","getFindQuery","query","sort","count","skip","perPage","slicedDocuments","slice","documentsJSON","mapJSON","results","getFieldsWithRelationshipOptions","fetchSingle","form","getters","list","state","totalPages","byId","mutations","setFilters","setList","push","Math","ceil","setListItem","setErrors","model","hasError","replaceItem","findIndex","removeListItem","Date","toISOString","char","crypto","getRandomValues","Uint8Array","toString","database","databaseOptions","modules","storeModules","hooks","types","plugins","plugin","addRxPlugin","addDatabasePlugin","RxDBValidatePlugin","RxDBQueryBuilderPlugin","RxDBMigrationPlugin","RxDBReplicationPlugin","RxDBLeaderElectionPlugin","RxDBUpdatePlugin","require","process","env","DEBUGGING","RxDBDevModePlugin","createRxDatabase","adapter","this","addCollections","createStoreModule","getCollectionByName","hook","has","includes","params","namespaced","actions"],"mappings":"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"}