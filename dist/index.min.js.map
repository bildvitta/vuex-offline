{"version":3,"file":"index.min.js","sources":["../src/utils/deleteBy.js","../src/utils/find.js","../src/utils/findByIds.js","../src/utils/findOne.js","../src/utils/formatResponse.js","../src/utils/formatError.js","../src/utils/getFieldsByType.js","../src/utils/setOptions.js","../src/utils/getFieldsWithRelationshipOptions.js","../src/utils/parseJSON.js","../src/utils/getFindQuery.js","../src/utils/mapJSON.js","../src/utils/nestField.js","../src/utils/setDefaults.js","../src/utils/statusResponse.js","../src/module/actions/update.js","../src/module/actions/index.js","../src/module/actions/create.js","../src/module/actions/destroy.js","../src/module/actions/fetchFilters.js","../src/module/actions/fetchList.js","../src/module/actions/fetchSingle.js","../src/module/actions/replace.js","../src/module/getters.js","../src/module/mutations.js","../src/module/state.js","../src/defaults/createDateTime.js","../src/defaults/createUUID.js","../src/index.js"],"sourcesContent":["export default function (object, callback = () => {}) {\n  for (const key in object) {\n    const validation = callback(object[key])\n\n    if (validation) {\n      delete object[key]\n    }\n  }\n\n  return object\n}\n","import { database } from '../index.js'\n\n/**\n * @param {string} name\n * @param {object} query={object}\n * @returns {promise}\n * @example find('users', { isActive: true })\n */\nexport default function (name, query = {}) {\n  return database.collections[name].find({ selector: query }).exec()\n}\n","import { database } from '../index.js'\n/**\n * @param {string} name\n * @param {string[]} ids\n * @returns {Promise<Map>}\n * @example findByIds('users', ['uuid-1', 'uuid-2'])\n */\nexport default function (name, ids) {\n  return database.collections[name].findByIds(ids)\n}\n","import { database } from '../index.js'\n\n/**\n * @param {string} name\n * @param {object | string} query={object | string}\n * @returns {promise}\n * @example findOne('users', 'my_uuid')\n */\nexport default function (name, query = {}) {\n  const queryParam = typeof query === 'object' ? { selector: query } : query\n\n  return database.collections[name].findOne(queryParam).exec()\n}\n","export default function (response) {\n  return {\n    data: {\n      status: { code: 200 },\n      ...response\n    }\n  }\n}\n","import { RxError } from 'rxdb/dist/es/rx-error.js'\nimport formatResponse from './formatResponse.js'\n\n// https://www.npmjs.com/package/is-my-json-valid#error-messages\nconst ptBR = {\n  'is required': 'Este campo é obrigatório.',\n  // 'is the wrong type': '',\n  // 'has additional items': '',\n  'must be FORMAT format': 'Este campo precisa ser FORMAT.',\n  'must be unique': 'Já existe um registro com este valor.',\n  'must be date-time format': 'Data invalida.',\n  // 'must be an enum value': '',\n  // 'dependencies not set': '',\n  // 'has additional properties': '',\n  // 'referenced schema does not match': '',\n  // 'negative schema matches': '',\n  // 'pattern mismatch': '',\n  // 'no schemas match': '',\n  // 'no (or more than one) schemas match': '',\n  // 'has a remainder': '',\n  'has more properties than allowed': 'Selecione menos propriedades.',\n  'has less properties than allowed': 'Selecione mais propriedades.',\n  'has more items than allowed': 'Selecione menos itens.',\n  'has less items than allowed': 'Selecione mais itens.',\n  'has longer length than allowed': 'O valor é muito grande.',\n  'has less length than allowed': 'O valor é muito pequeno.',\n  'is less than minimum': 'O valor é menor que o mínimo.',\n  'is more than maximum': 'O valor é maior que o máximo.'\n}\n\nconst localize = message => [ptBR[message] || message]\nconst labelize = label => label.replace('data.', '')\n\nexport default function (error, response = {}) {\n  if (!(error instanceof RxError)) {\n    throw error\n  }\n\n  const { errors: databaseErrors, obj: result } = error.parameters\n  const errors = {}\n\n  for (const { field, message } of databaseErrors) {\n    errors[labelize(field)] = localize(message)\n  }\n\n  return {\n    response: formatResponse({\n      status: { code: 400 }, errors, result, ...response\n    })\n  }\n}\n","export default function (fields = {}, type, callback) {\n  const filteredFields = {}\n\n  for (const key in fields) {\n    const field = fields[key]\n\n    if (field.type === type) {\n      filteredFields[key] = field\n      callback === 'function' && callback(field)\n    }\n  }\n\n  return filteredFields\n}\n","export default function (documents, { label, value }) {\n  return documents.map(document => ({\n    label: document[label],\n    value: document[value],\n    data: document.toJSON()\n  }))\n}\n","import setOptions from './setOptions.js'\n\nexport default async function ({ fields, idKey, parent, relationships, form, id }) {\n  fields = JSON.parse(JSON.stringify(fields))\n\n  const methodsModels = {\n    fetchList: !form && !id,\n    fetchSingleCreate: form && !id,\n    fetchSingleEdit: form && id,\n    fetchSingleShow: !form && id\n  }\n\n  // model with value true\n  const model = Object.keys(methodsModels).find(item => methodsModels[item])\n\n  for (const key in relationships) {\n    const relationship = relationships[key]\n    const { ref, methods } = relationship\n\n    // if there are methods, and it is not the current method returns empty options\n    if (methods && methods.length && !methods.includes(model)) {\n      fields[key].options = []\n      continue\n    }\n\n    if (ref) {\n      if (!relationship.label) { relationship.label = idKey }\n      if (!relationship.value) { relationship.value = idKey }\n\n      const documents = await parent.collections[ref].find().exec()\n      fields[key].options = setOptions(documents, relationship)\n\n      continue\n    }\n\n    for (const relKey in relationship) {\n      const relRef = relationship[relKey].ref\n      const documents = await parent.collections[relRef].find().exec()\n\n      fields[key].children[relKey] = {\n        options: setOptions(documents, relationship[relKey]),\n        ...fields[key].children[relKey]\n      }\n    }\n  }\n\n  return fields\n}","export default function (value) {\n  try { return JSON.parse(value) } catch { return value }\n}\n","import parseJSON from './parseJSON.js'\n\nexport default function (moduleFilters = {}, { filters, search }) {\n  const { queryOperators, search: searchFilter } = moduleFilters\n  const filtersQuery = {}\n\n  for (const name in filters) {\n    const filter = filters[name]\n    const queryOperator = queryOperators[name]\n\n    if (!queryOperator) {\n      throw new Error(`The queryOperator is missing for filter \"${name}\".`)\n    }\n\n    if (typeof queryOperator === 'function') {\n      const { value, operator, model } = queryOperator(filter) || {}\n\n      filtersQuery[model || name] = {\n        ...filtersQuery[model || name],\n        [operator || '$regex']: parseJSON(value) \n      }\n\n      continue\n    }\n\n    filtersQuery[name] = { [queryOperator]: parseJSON(filter) }\n  }\n\n  if (search) {\n    filtersQuery.$or = (searchFilter || []).map(\n      item => ({ [item]: { $regex: new RegExp(search, 'gi') } })\n    )\n  }\n\n  return {\n    selector: { ...filtersQuery }\n  }\n}\n","export default function (array = []) {\n  return array.map(item => item.toJSON())\n}\n","export default function nestField (nested = [], destroyedKey = 'destroyed') {\n  if (!Array.isArray(nested)) {\n    throw new Error('Please provide a valid array.')\n  }\n\n  let index = 0\n\n  function hasNext () {\n    return index < nested.length\n  }\n\n  function next () {\n    return nested[index++]\n  }\n\n  while (hasNext()) {\n    const current = next()\n\n    if (current[destroyedKey]) {\n      index--\n      nested.splice(index, 1)\n      continue\n    }\n\n    for (const key in current) {\n      if (Array.isArray(current[key]) && current[key].length) {\n        nestField(nested[index - 1][key])\n      }\n    }\n  }\n\n  return nested\n}\n","export default function (defaults = {}) {\n  const response = {}\n\n  for (const key in defaults) {\n    const value = defaults[key]\n    response[key] = typeof value === 'function' ? value() : value\n  }\n\n  return response\n}\n","export default function (code, text) {\n  return {\n    data: {\n      status: { code, text }\n    }\n  }\n}\n","import {\n  formatError,\n  formatResponse,\n  getFieldsByType,\n  nestField,\n  setDefaults,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function (module, collection, { postSaveByAction }) {\n  const { fields, updateDefaults, name } = module\n\n  return async function ({ commit }, { payload, id }) {\n    payload = { ...payload, ...setDefaults(updateDefaults) }\n\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      getFieldsByType(fields, 'nested', ({ name }) => {\n        payload[name] = nestField(payload[name])\n      })\n\n      await document.update({ $set: payload })\n      const result = { ...document.toJSON(), ...payload }\n\n      commit('replaceItem', result)\n\n      postSaveByAction({\n        name,\n        fields,\n        payload: result,\n      })\n      return formatResponse({ result })\n    } catch (error) {\n      throw formatError(error)\n    }\n  }\n}\n","import create from './create.js'\nimport destroy from './destroy.js'\nimport fetchFilters from './fetchFilters.js'\nimport fetchList from './fetchList.js'\nimport fetchSingle from './fetchSingle.js'\nimport replace from './replace.js'\nimport update from './update.js'\n\nexport default {\n  create,\n  destroy,\n  fetchFilters,\n  fetchList,\n  fetchSingle,\n  replace,\n  update\n}\n","import {\n  deleteBy,\n  formatError,\n  formatResponse,\n  getFieldsByType,\n  nestField,\n  setDefaults\n} from '../../utils/index.js'\n\nexport default function (module, collection, { postSaveByAction }) {\n  const { defaults, fields, name } = module\n\n  \n  return async function ({ commit }, { payload }) {\n    payload = {\n      ...setDefaults(defaults),\n      ...deleteBy(payload, item => item === undefined)\n    }\n\n    try {\n      getFieldsByType(fields, 'nested', ({ name }) => {\n        payload[name] = nestField(payload[name])\n      })\n\n      const document = await collection.insert(payload)\n      const documentJSON = document.toJSON()\n\n      commit('setListItem', documentJSON)\n\n      postSaveByAction({\n        name,\n        fields,\n        payload: documentJSON,\n      })\n      return formatResponse({ result: documentJSON })\n    } catch (error) {\n      throw formatError(error)\n    }\n  }\n}\n","import {\n  formatResponse,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function ({ commit }, { id }) {\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      const documentJSON = document.toJSON()\n      await document.remove()\n\n      commit('removeListItem', id)\n      return formatResponse({ result: documentJSON })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse,\n  getFieldsWithRelationshipOptions\n} from '../../utils/index.js'\n\nexport default function ({ filters, idKey, parent }) {\n  return async function ({ commit }) {\n    try {\n      const { fields, relationships } = filters\n      const formattedFields = await getFieldsWithRelationshipOptions({ fields, idKey, parent, relationships })\n\n      commit('setFilters', formattedFields)\n      return formatResponse({ formattedFields })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse,\n  getFindQuery,\n  getFieldsWithRelationshipOptions,\n  mapJSON\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function (\n    { commit },\n    { filters, findQuery, increment, limit, page = 1, search } = {}\n  ) {\n    try {\n      const { preQueryList } = module.interceptors || {}\n      const findParam = preQueryList ? preQueryList({ search, filters }) : findQuery || {}\n\n      if (!findQuery) {\n        findQuery = getFindQuery(module.filters, {\n          filters: findParam.filters || filters,\n          search: findParam.search || search\n        })\n      }\n\n      const query = collection.find(findQuery).sort(module.sort)\n      const documents = await query.exec()\n\n      const count = documents.length\n      const skip = (page - 1) * (limit || module.perPage)\n\n      const slicedDocuments = documents.slice(skip, skip + module.perPage)\n      const documentsJSON = mapJSON(slicedDocuments)\n\n      commit('setList', { count, increment, results: documentsJSON })\n\n      return formatResponse({\n        fields: await getFieldsWithRelationshipOptions(module),\n        results: documentsJSON\n      })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import {\n  formatResponse,\n  getFieldsWithRelationshipOptions,\n  statusResponse\n} from '../../utils/index.js'\n\nexport default function (module, collection) {\n  return async function ({ commit }, { form, id }) {\n    const fields = await getFieldsWithRelationshipOptions({ ...module, form, id })\n\n    if (form && !id) {\n      return formatResponse({ fields })\n    }\n\n    try {\n      const document = await collection.findOne(id).exec()\n\n      if (!document) {\n        throw statusResponse(404, 'Not found')\n      }\n\n      const documentJSON = document.toJSON()\n      commit('replaceItem', documentJSON)\n\n      return formatResponse({ fields, result: documentJSON })\n    } catch (error) {\n      return error\n    }\n  }\n}\n","import update from './update.js'\n\nexport default function (module, collection, interceptors) {\n  return update(module, collection, interceptors)\n}\n","export default function ({ getters, idKey }) {\n  return {\n    list: state => state.list,\n    filters: state => state.filters,\n    totalPages: state => state.totalPages,\n\n    byId: state => id => state.list.find(item => item[idKey] === id),\n\n    ...getters\n  }\n}\n","export default function ({ idKey, mutations, perPage }) {\n  return {\n    setFilters (state, payload) {\n      state.filters = payload\n    },\n\n    setList (state, { count, increment, results = [] }) {\n      if (increment) {\n        state.list.push(...results)\n      } else {\n        state.list = results\n      }\n\n      state.totalPages = Math.ceil(count / perPage)\n    },\n\n    setListItem (state, payload = {}) {\n      state.list.push(payload)\n    },\n\n    setErrors (state, { model, hasError }) {\n      state[model] = !!hasError\n    },\n\n    replaceItem (state, payload) {\n      const index = state.list.findIndex(item => item[idKey] === payload[idKey])\n      ~index ? state.list.splice(index, 1, payload) : state.list.push(payload)\n    },\n\n    removeListItem (state, id) {\n      const index = state.list.findIndex(item => item[idKey] === id)\n      ~index && state.list.splice(index, 1)\n    },\n\n    ...mutations\n  }\n}\n","export default function ({ state }) {\n  return {\n    list: [],\n    filters: {},\n    totalPages: 0,\n\n    ...state\n  }\n}\n","export default function () {\n  return (new Date()).toISOString()\n}\n","export default function () {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, char =>\n    (char ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> char / 4)\n      .toString(16)\n  )\n}\n","import { addRxPlugin, createRxDatabase, PouchDB } from 'rxdb/plugins/core'\nimport { RxDBValidatePlugin } from 'rxdb/plugins/validate'\nimport { RxDBQueryBuilderPlugin } from 'rxdb/plugins/query-builder'\nimport { RxDBMigrationPlugin } from 'rxdb/plugins/migration'\nimport { RxDBReplicationPlugin } from 'rxdb/plugins/replication'\nimport { RxDBLeaderElectionPlugin } from 'rxdb/plugins/leader-election'\nimport { RxDBUpdatePlugin } from 'rxdb/plugins/update'\n\nimport { actions, getters, mutations, state } from './module/index.js'\n\nimport { find, findOne, nestField, findByIds } from './utils/index.js'\nimport { createDateTime, createUUID } from './defaults/index.js'\n\nlet database = null\n\nexport default class {\n  constructor (options = {}) {\n    if (!options.database.name) {\n      throw new Error('Name is required.')\n    }\n\n    this.database = null\n    this.databaseOptions = options.database\n\n    this.idKey = options.idKey || 'id'\n    this.sync = options.sync\n    this.perPage = options.perPage || 12\n\n    this.collections = {}\n    this.modules = options.modules || []\n    this.storeModules = {}\n\n    // Middleware-hooks\n    // https://rxdb.info/middleware.html\n    this.hooks = options.hooks || [\n      'preInsert',\n      'postInsert',\n      'preSave',\n      'postSave',\n      'preRemove',\n      'postRemove',\n      'postCreate'\n    ]\n\n    this.interceptors = options.interceptors || {\n      postSaveByAction: (() => {})\n    }\n\n    // Types\n    this.types = options.types || [\n      'CREATE',\n      'DESTROY',\n      'FETCH_FILTERS',\n      'FETCH_LIST',\n      'FETCH_SINGLE',\n      'REPLACE',\n      'UPDATE'\n    ]\n  }\n\n  addDatabasePlugin (...plugins) {\n    for (const plugin of plugins) {\n      addRxPlugin(plugin)\n    }\n  }\n\n  async createDatabase () {\n    // Custom Build\n    // https://rxdb.info/custom-build.html\n    this.addDatabasePlugin(\n      RxDBValidatePlugin,\n      RxDBQueryBuilderPlugin,\n      RxDBMigrationPlugin,\n      RxDBReplicationPlugin,\n      RxDBLeaderElectionPlugin,\n      RxDBUpdatePlugin,\n\n      require('pouchdb-adapter-http'),\n      require('pouchdb-adapter-idb')\n    )\n\n    if (process.env.DEBUGGING) {\n      this.addDatabasePlugin(\n        require('rxdb/plugins/dev-mode').RxDBDevModePlugin\n      )\n    }\n\n    this.database = await createRxDatabase({\n      adapter: 'idb',\n      ...this.databaseOptions\n    })\n\n    database = this.database\n  }\n\n  destroyDatabase () {\n    return this.database.destroy()\n  }\n\n  removeDatabase () {\n    return this.database.remove()\n  }\n\n  async setupCollections () {\n    const collections = {}\n\n    for (const module of this.modules) {\n      collections[module.name] = module\n    }\n\n    this.collections = await this.database.addCollections(collections)\n\n    for (const module of this.modules) {\n      this.storeModules[module.name] = this.createStoreModule(module)\n    }\n  }\n\n  createStoreModule (module = {}) {\n    module.parent = this\n    const collection = this.getCollectionByName(module.name)\n\n    module.idKey = module.idKey || this.idKey\n    module.perPage = module.perPage || this.perPage\n\n    // Hooks\n    const hooks = module.hooks || {}\n\n    for (const name of this.hooks) {\n      const hook = hooks[name]\n\n      if (Array.isArray(hook)) {\n        collection[name](...hook)\n      } else if (typeof hook === 'function') {\n        collection[name](hook, false)\n      }\n    }\n\n    // Types\n    const types = module.types || this.types\n    const has = type => types.includes(type)\n\n    // Params\n    const params = [module, collection, this.interceptors]\n\n    return {\n      namespaced: true,\n\n      actions: {\n        create: has('CREATE') && actions.create(...params),\n        destroy: has('DESTROY') && actions.destroy(...params),\n        fetchFilters: has('FETCH_FILTERS') && actions.fetchFilters(...params),\n        fetchList: has('FETCH_LIST') && actions.fetchList(...params),\n        fetchSingle: has('FETCH_SINGLE') && actions.fetchSingle(...params),\n        replace: has('REPLACE') && actions.replace(...params),\n        update: has('UPDATE') && actions.update(...params),\n        ...module.actions\n      },\n\n      getters: getters(...params),\n      mutations: mutations(...params),\n      state: state(...params)\n    }\n  }\n\n  getCollections () {\n    return this.collections\n  }\n\n  getCollectionByName (name) {\n    return this.collections[name]\n  }\n\n  getStoreModules () {\n    return this.storeModules\n  }\n\n  async makeSync (collections) {\n    const defaultOptions = {\n      waitForLeadership: true,\n      direction: {\n        pull: true,\n        push: true\n      },\n      options: {\n        retry: true,\n        live: true\n      }\n    }\n\n    const collectionsToSync = collections || Object.keys(this.collections)\n    let collectionsActiveSync = {}\n\n    const handleOnSync = (syncState, collectionName, moduleByName) => {\n      syncState.active$.subscribe(active => {\n        if (!Object.keys(collectionsActiveSync).length && !active) return\n\n        Object.assign(collectionsActiveSync, { [collectionName]: active })\n\n        const collectionsList = Object.values(collectionsActiveSync)\n        const quantityOfFinishedSync = collectionsList.filter(value => !value).length\n\n        const percentage = quantityOfFinishedSync ? Math.round((100 * quantityOfFinishedSync) / collectionsList.length) : 0\n\n        this.sync.onSync && this.sync.onSync(percentage, collectionsActiveSync)\n\n        moduleByName.sync && moduleByName.sync.onSync && moduleByName.sync.onSync(percentage, collectionsActiveSync)\n      })\n    }\n\n    for (const collectionIndex in collectionsToSync) {\n      const collectionName = collectionsToSync[collectionIndex]\n\n      const moduleByName = this.modules.find(module => module.name === collectionName)\n      const moduleOptions = (moduleByName.sync && moduleByName.sync.options) || {}\n      const syncOptions = { ...defaultOptions, ...this.sync.options, ...moduleOptions }\n      const query = (moduleByName.sync && moduleByName.sync.query) || this.sync.query || (() => {})\n\n      if (!syncOptions.baseURL) {\n        throw new Error('baseURL is required to sync.')\n      }\n\n      const syncState = await this.collections[collectionName].sync({\n        ...syncOptions,\n        remote: `${syncOptions.baseURL}/${collectionName}`,\n        query: query(this.collections[collectionName])\n      })\n\n      if (moduleByName.sync && moduleByName.sync.handler) {\n        moduleByName.sync.handler(syncState)\n      }\n\n      if (this.sync.onSync || (moduleByName.sync && moduleByName.sync.onSync)) {\n        handleOnSync(syncState, collectionName, moduleByName)\n      }\n    }\n  }\n}\n\nexport {\n  PouchDB,\n  createDateTime,\n  createUUID,\n  database,\n  find,\n  findByIds,\n  findOne,\n  nestField,\n}\n"],"names":["object","callback","key","validation","name","query","database","collections","find","selector","exec","ids","findByIds","queryParam","_typeof","findOne","response","data","status","code","ptBR","localize","message","labelize","label","replace","error","RxError","parameters","databaseErrors","errors","result","obj","field","formatResponse","fields","type","filteredFields","documents","value","map","document","toJSON","idKey","parent","relationships","form","id","JSON","parse","stringify","methodsModels","fetchList","fetchSingleCreate","fetchSingleEdit","fetchSingleShow","model","Object","keys","item","relationship","ref","methods","length","includes","options","setOptions","relKey","relRef","children","moduleFilters","filters","search","queryOperators","searchFilter","filtersQuery","filter","queryOperator","Error","parseJSON","operator","$or","$regex","RegExp","array","nestField","nested","destroyedKey","Array","isArray","index","hasNext","next","current","splice","defaults","text","module","collection","postSaveByAction","updateDefaults","commit","payload","setDefaults","statusResponse","getFieldsByType","update","$set","formatError","create","deleteBy","undefined","insert","documentJSON","destroy","remove","fetchFilters","getFieldsWithRelationshipOptions","formattedFields","findQuery","increment","limit","page","interceptors","preQueryList","findParam","getFindQuery","sort","count","skip","perPage","slicedDocuments","slice","documentsJSON","mapJSON","results","fetchSingle","getters","list","state","totalPages","byId","mutations","setFilters","setList","push","Math","ceil","setListItem","setErrors","hasError","replaceItem","findIndex","removeListItem","Date","toISOString","char","crypto","getRandomValues","Uint8Array","toString","databaseOptions","sync","modules","storeModules","hooks","types","plugins","plugin","addRxPlugin","addDatabasePlugin","RxDBValidatePlugin","RxDBQueryBuilderPlugin","RxDBMigrationPlugin","RxDBReplicationPlugin","RxDBLeaderElectionPlugin","RxDBUpdatePlugin","require","process","env","DEBUGGING","RxDBDevModePlugin","createRxDatabase","adapter","this","addCollections","createStoreModule","getCollectionByName","hook","has","params","namespaced","actions","defaultOptions","waitForLeadership","direction","pull","retry","live","collectionsToSync","collectionsActiveSync","handleOnSync","syncState","collectionName","moduleByName","active$","subscribe","active","assign","collectionsList","values","quantityOfFinishedSync","percentage","round","_this","onSync","collectionIndex","moduleOptions","syncOptions","baseURL","remote","handler"],"mappings":"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"}